@model SlaughtoriaGamesP1.Models.InventoryProductSelect

<style>

    /* Dropdown Button */
    .btnDrop {
        background-color: #3498DB;
        color: white;
        padding: 16px;
        font-size: 16px;
        border: none;
        cursor: pointer;
    }

        /* Dropdown button on hover & focus */
        .btnDrop:hover, .btnDrop:focus {
            background-color: #2980B9;
        }

    /* The container <div> - needed to position the dropdown content */
    .dDown {
        position: relative;
        display: inline-block;
    }

    /* Dropdown Content (Hidden by Default) */
    .dDown-content {
        position: absolute;
        background-color: #f1f1f1;
        min-width: 160px;
        max-height: 200px;
        margin-bottom: 20px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        z-index: 1;
        overflow-y: scroll;
    }

        /* Links inside the dropdown */
        .dDown-content a {
            color: black;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
        }

    .hidedrop {
        display: none;
    }

    .showdrop {
        display: block;
    }
</style>
<p>
    Displaying items being sold at your default store...
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                ProductName
            </th>
            <th>
                Product Description
            </th>
            <th>
                Unit Price
            </th>
            <th>
                Product Current Quantity
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.inventoryitem)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductDescrip)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UnitPrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductCurrentQuantity)
                </td>

                <td>
                    <a>@Html.ActionLink("Add item to cart", "AddItemToCart", "Stores", item)</a>
                    @*<div class="dDown">
                        <button onclick="storeDropdown()" class="btnDrop">Add</button>
                        <div id="dropCon" class="dDown-content hidedrop">
                            <form asp-action="AddItemToCart">
                                <input type="number" name="ordered" value="1" min="1" max="@Html.DisplayFor(modelItem=> item.ProductCurrentQuantity)" asp-for="NumberOrdered" />
                                <input type="submit" asp-for="selectedItem" />
                            </form>

                        </div>
                    </div>*@
                </td>
            </tr>
        }
    </tbody>
</table>
@foreach (var item in Model.inventoryitem)
{
    @if (item.ProductDiscount != 0)
    {
        decimal discount = item.ProductDiscount;
        item.ProductDiscount = Math.Round((discount * 100), 0);

        @Html.DisplayFor(modelItem => item.ProductName)<span> is on sale for </span>@Html.ValueFor(modelItem => item.ProductDiscount)<span>% off!</span>

    }
}

<a asp-area="" asp-action="_CheckCart" asp-controller="Stores">Check Cart</a>

<script>

    var mydroplist = document.querySelector("#dropCon");
    console.log(mydroplist);


    document.querySelector(".btnDrop").addEventListener("click", (e) => {
        console.log(e);
        if (mydroplist.classList.contains("showdrop")) {
            mydroplist.classList.remove("showdrop");
            mydroplist.classList.add("hidedrop");
        }
        else if (mydroplist.classList.contains("hidedrop")) {
            mydroplist.classList.remove("hidedrop");
            mydroplist.classList.add("showdrop");
        }


    })
    /* When the user clicks on the button,
    toggle between hiding and showing the dropdown content */
    function storeDropdown() {
        document.getElementById("dropCon").classList.toggle("show");
    }

    // Close the dropdown menu if the user clicks outside of it
    window.onclick = function (event) {
        if (!event.target.matches('.btnDrop')) {
            var dropdowns = document.getElementsByClassName("dDown-content");
            var i;
            for (i = 0; i < dropdowns.length; i++) {
                var openDropdown = dropdowns[i];
                if (openDropdown.classList.contains('show')) {
                    openDropdown.classList.remove('show');
                }
            }
        }
    }
</script>